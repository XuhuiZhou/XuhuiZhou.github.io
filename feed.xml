<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://xuhuizhou.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://xuhuizhou.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-04-01T11:57:27-04:00</updated><id>https://xuhuizhou.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">The overlooked ‚Äúbad‚Äù word list ‚ò†Ô∏è</title><link href="https://xuhuizhou.github.io/blog/2023/filter-word/" rel="alternate" type="text/html" title="The overlooked ‚Äúbad‚Äù word list ‚ò†Ô∏è"/><published>2023-04-21T12:40:16-04:00</published><updated>2023-04-21T12:40:16-04:00</updated><id>https://xuhuizhou.github.io/blog/2023/filter-word</id><content type="html" xml:base="https://xuhuizhou.github.io/blog/2023/filter-word/"><![CDATA[<p><img src="https://www.voicesofyouth.org/sites/voy/files/images/2021-06/tempimageckmi1f.png" alt="Negative words can be harmful" style="width:100%"/></p> <p><em>This blog post is insipred by <a href="http://maartensap.com/11-830-Spring2023/index.html">11-830 Computational Ethics in NLP</a>. Great course üßë‚Äçüè´ üíÉ! Take it if you are interested in social good for NLP/AI.</em></p> <p><span style="color:purple;font-size:110%;">TL;DR Stop using the <a href="https://github.com/LDNOOBW/List-of-Dirty-Naughty-Obscene-and-Otherwise-Bad-Words/tree/master">List-of-Dirty-Naughty-Obscene-and-Otherwise-Bad-Words</a>, use <a href="https://github.com/XuhuiZhou/toxtrig/tree/master">ToxicTrig</a></span></p> <h2 id="motivation">Motivation</h2> <p>The internet is rampant with toxic language, which can have a detrimental impact on the well-being of individuals and communities. Many ways to analyze toxic language exist, and although using word lists is fundamentally problematic due to the context-dependent nature of toxicity, they offer several advantages, such as convenience and ease of scaling (imaging one needs to analyze trillions-token-level corpus). However, current bad word lists, like <a href="https://github.com/LDNOOBW/List-of-Dirty-Naughty-Obscene-and-Otherwise-Bad-Words/tree/master">List-of-Dirty-Naughty-Obscene-and-Otherwise-Bad-Words</a>, are outdated and sometimes label words as toxic that may no longer be considered offensive (e.g., queer). This highlights the need for a new list that can better analyze toxic language. This is where our package, <a href="https://github.com/XuhuiZhou/toxtrig/tree/master">ToxicTrig</a>, comes in to provide a better alternative for this purpose.</p> <h2 id="background">Background</h2> <h5 id="-what-is-bad-word-list"><i class="fas fa-biohazard"></i> What is bad word list?</h5> <p>Bad word lists have been widely used due to their convenience in providing reference material for content moderation and filtering systems. By identifying and potentially blocking offensive language, these lists aim to ensure that online spaces remain safe and inclusive for everyone.</p> <h5 id="-whats-the-problem-with-the-current-bad-word-list"><i class="fas fa-exclamation-circle"></i> What‚Äôs the problem with the current bad word list?</h5> <p>The current <a href="https://github.com/LDNOOBW/List-of-Dirty-Naughty-Obscene-and-Otherwise-Bad-Words/tree/master">List-of-Dirty-Naughty-Obscene-and-Otherwise-Bad-Words</a> and other similar lists have several limitations that make them less effective and potentially problematic in addressing the issue of toxic language. Some of the main problems include:</p> <ul> <li><strong>Outdated terms</strong>: Many lists contain outdated offensive terms that may not be relevant or prevalent in today‚Äôs internet landscape, leading to less effective filtering systems.</li> <li><strong>Inherent biases</strong>: These lists often fail to account for cultural, linguistic, and contextual nuances, which can result in over-blocking or under-blocking of content.</li> </ul> <h5 id="-our-patch-to-the-problem"><i class="fas fa-vest-patches"></i> Our patch to the problem</h5> <p>To overcome the limitations of existing bad word lists, we introduce <a href="https://github.com/XuhuiZhou/toxtrig/tree/master">ToxicTrig</a>, a Python package that provides access to a dataset of words that is split into three distinct categories depending on the extent to which they carry profane or hateful meanings or are simply associated with hateful contexts. We refer to the full set of words as toxicity triggers. This package is inspired by the paper <a href="https://aclanthology.org/2021.eacl-main.274.pdf">Challenges in Automated Debiasing for Toxic Language Detection</a>.</p> <hr/> <h2 id="introducing-toxictrig">Introducing ToxicTrig</h2> <h5 id="-categories"><i class="fas fa-th-large"></i> Categories</h5> <p><a href="https://github.com/XuhuiZhou/toxtrig/tree/master">ToxicTrig</a> offers a taxonomy of toxic triggers, which includes the following categories:</p> <ul> <li><strong>Harmless-minority</strong>: Non-offensive minority identity mentions (NOI). It refers to descriptive mentions of minoritized demographic or social identities (e.g., gay, female, Muslim). Those words, though not offensive itself, are often found in offensive statements that are hateful towards minorities.</li> <li><strong>Offensive-minority-reference</strong>: Possibly offensive minority identity mentions (OI). It refers to mentions of minoritized identities that could denote profanity or hate depending on pragmatic and contextual interpretations. This includes reclaimed slurs (queer, n*gga), which connote less offensive intent when spoken by in-group members compared to out-group members.</li> <li><strong>Offensive-not-minority</strong>: Possibly offensive non-identity mentions (ONI). Note that these words are not necessrially offensive in specific context (e.g., ‚ÄúI f<em>cked up‚Äù, ‚Äúf</em>cking love this!‚Äù).</li> </ul> <h5 id="-how-to-use-our-package"><i class="fas fa-box"></i> How to use our package</h5> <p>Using <a href="https://github.com/XuhuiZhou/toxtrig/tree/master">ToxicTrig</a> is simple and straightforward. After installing the package with <code class="language-plaintext highlighter-rouge">pip install toxicTrig</code>, you can import the package and use it to analyze a list of text strings. The <code class="language-plaintext highlighter-rouge">text_analysis</code> function will return a dictionary containing the categorized toxic triggers found in the input text.</p> <hr/> <h2 id="conclusion">Conclusion</h2> <p><a href="https://github.com/XuhuiZhou/toxtrig/tree/master">ToxicTrig</a> provides a more nuanced approach to analyzing toxic language compared to traditional bad word lists. By addressing the limitations of existing lists and offering a dataset that takes into account nuanced categories of words associated with toxicity, <a href="https://github.com/XuhuiZhou/toxtrig/tree/master">ToxicTrig</a> can be a better alternative for content moderation and filtering systems.</p>]]></content><author><name></name></author><category term="nlp-posts"/><category term="nlp,"/><category term="social"/><category term="impact"/><summary type="html"><![CDATA[april, looking forward to summer]]></summary></entry><entry><title type="html">a post with giscus comments</title><link href="https://xuhuizhou.github.io/blog/2022/giscus-comments/" rel="alternate" type="text/html" title="a post with giscus comments"/><published>2022-12-10T10:59:00-05:00</published><updated>2022-12-10T10:59:00-05:00</updated><id>https://xuhuizhou.github.io/blog/2022/giscus-comments</id><content type="html" xml:base="https://xuhuizhou.github.io/blog/2022/giscus-comments/"><![CDATA[<p>This post shows how to add GISCUS comments.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="external-services"/><summary type="html"><![CDATA[an example of a blog post with giscus comments]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://xuhuizhou.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T19:20:09-04:00</published><updated>2022-04-23T19:20:09-04:00</updated><id>https://xuhuizhou.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://xuhuizhou.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">how I make my front page logo</title><link href="https://xuhuizhou.github.io/blog/2022/wavey-lti-logo/" rel="alternate" type="text/html" title="how I make my front page logo"/><published>2022-04-14T12:40:16-04:00</published><updated>2022-04-14T12:40:16-04:00</updated><id>https://xuhuizhou.github.io/blog/2022/wavey-lti-logo</id><content type="html" xml:base="https://xuhuizhou.github.io/blog/2022/wavey-lti-logo/"><![CDATA[<div class="svg_logo" style="width: 60%; display: block; margin-left: auto; margin-right: auto;"> <svg id="Layer_1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 200 200"><defs><style>.st0{fill:#66af4c}.st1{fill:#5d9d68}.st2{fill:#52868a}.st3{fill:#4874a6}.st4{fill:#8cb13f}.st5{fill:#849857}.st6{fill:#7a7c73}.st7{fill:#72638a}.st8{fill:#bab230}.st9{fill:#b39442}.st10{fill:#ab6f57}.st11{fill:#a45069}.st12{fill:#e0b423}.st13{fill:#da9031}.st14{fill:#d36541}.st15{fill:#cd404e}.st16{fill:#fff}.cls-1{opacity:1}.cls-2{fill:#fff}.cls-3{fill:#fff}</style></defs> <rect x="0" y="0" class="box wave1 st0" width="50" height="50"/> <rect x="50" class="box wave2 st1" width="50" height="50"/> <rect x="100" class="box wave3 st2" width="50" height="50"/> <rect x="150" class="box wave4 st3" width="50" height="50"/> <rect y="50" class="box wave2 st4" width="50" height="50"/> <rect x="50" y="50" class="box wave3 st5" width="50" height="50"/> <rect x="100" y="50" class="box wave4 st6" width="50" height="50"/> <rect x="150" y="50" class="box wave5 st7" width="50" height="50"/> <rect y="100" class="box wave3 st8" width="50" height="50"/> <rect x="50" y="100" class="box wave4 st9" width="50" height="50"/> <rect x="100" y="100" class="box wave5 st10" width="50" height="50"/> <rect x="150" y="100" class="box wave6 st11" width="50" height="50"/> <rect y="150" class="box wave4 st12" width="50" height="50"/> <rect x="50" y="150" class="box wave5 st13" width="50" height="50"/> <rect x="100" y="150" class="box wave6 st14" width="50" height="50"/> <rect x="150" y="150" class="box wave7 st15" width="50" height="50"/> <g transform="matrix(1,0,0,1,0,0)" class="cls-1"> <path transform="matrix(0.3,0,0,0.3,204.4,199.4)" class="cls-3" d="M -227.6 -443.5 C -260 -549.8 -328.1 -615.2 -341.4 -627.5 L -373.4 -598.2 c 11 10 64.3 60.2 96.1 142.6 C -297 -459.1 -316.8 -461 -336.8 -461.5 h -0.1 C -364.2 -518.9 -401.5 -553.9 -409.6 -561.3 L -442 -530.1 c 5.9 5 34 29.4 58 70.3 C -403.8 -457.9 -423.4 -454.5 -442.6 -449.7 C -453.1 -465.6 -465.6 -480.2 -479.8 -492.9 L -509.4 -464.3 C -500 -456.1 -491.5 -446.8 -484 -436.8 C -578.3 -401.8 -635.7 -341 -647.2 -328.5 l 29.5 31.8 C -607.2 -308.3 -552.4 -367.5 -461.8 -399 C -454.7 -382.8 -450 -365.7 -448 -348.1 c -77 27.1 -123.9 77.7 -132.5 87.4 L -549 -228.6 c 6.1 -7.3 41.2 -48.2 100.3 -74.4 c -6 40.9 -25.4 71.6 -41.3 90.7 C -497.7 -205.8 -504.9 -198.7 -511.6 -191.1 l 0.4 0.4 l 8.4 8.6 l 20.5 19.4 c 0.5 -0.5 1.2 -1.1 2.1 -1.8 C -475.6 -169.6 -470.7 -174.3 -465.6 -178.8 c 18.7 -16.5 51.7 -39 97 -44.9 c -26 59.5 -67.2 94.4 -75.8 101.5 l 29.9 27.7 c 11.1 -9.7 60.9 -54.5 88.8 -129.5 C -307.7 -221.9 -290.1 -217 -273.6 -209.5 C -305.4 -119.3 -364.8 -65.2 -377.6 -53.9 l 30 29.5 c 13.9 -12.4 75.4 -68.9 111.1 -162.9 C -226.4 -179.7 -217.2 -171.1 -208.9 -161.6 l 27.4 -29.5 c -3.8 -4.4 -18.2 -20.6 -42 -36.9 C -218.3 -247.9 -214.6 -268.3 -212.6 -288.8 c 41.1 24.1 65.5 52.5 71.3 59.5 q 13.7 -15.1 27.5 -30.1 c -8.2 -9.3 -41.5 -45.8 -96.8 -73.4 C -210.8 -353.4 -212.7 -374 -216.1 -394.3 c 82.3 32 131.9 85.7 142.7 97.7 l 29.3 -30.2 C -57.5 -341.6 -121.6 -410.3 -227.6 -443.5 Z m -136.2 25.4 C -357.3 -401 -352.6 -383.3 -349.9 -365.3 C -369.2 -365.2 -388.5 -363.2 -407.5 -359.3 C -410 -376.8 -414.7 -393.9 -421.5 -410.3 C -402.5 -414.5 -383.2 -417.1 -363.8 -418.1 Z m 16.7 99.7 C -347.7 -300.9 -350 -283.6 -354.1 -266.6 C -376.2 -265.8 -398.1 -261.6 -418.9 -254 C -411.2 -274.4 -406.7 -295.9 -405.6 -317.7 C -386.4 -322.4 -366.8 -324.9 -347 -325.1 Q -347.1 -321.8 -347.1 -318.4 Z m 84.2 -90.5 C -258.4 -389.8 -255.5 -370.3 -254.2 -350.7 C -271.9 -356.4 -290.1 -360.5 -308.5 -362.9 C -310.6 -381.5 -314.3 -399.8 -319.8 -417.7 C -300.6 -416.4 -281.6 -413.4 -262.9 -409 Z m 0.7 159.6 C -278.7 -256.4 -296.1 -261.4 -313.9 -264.2 C -310 -281.7 -307.7 -299.5 -307 -317.4 c 0.1 -1.6 0.1 -3.3 0.1 -4.9 C -288.9 -319.6 -271.2 -315 -254.1 -308.6 C -255.1 -288.7 -257.8 -268.9 -262.2 -249.4 Z"/> </g> </svg> <p>click to freeze the animation :)</p> </div> <h2 id="motivation">Motivation</h2> <p>I like <a href="https://github.com/alshedivat/al-folio">al-folio</a> website template. It is simple and elegant. Still, I‚Äôve always wanted to add some ‚Äúfun‚Äù parts to my website. Besides, I am such a fan of the <strong>LTI</strong> logo, thus I decide to play around with it.</p> <h2 id="background">Background</h2> <p>I barely have any experience in graphic design, which I figure out most of the steps below via YouTube videos <i class="fab fa-youtube"></i> and random websites <i class="fad fa-browser"></i> (Online learning :clap:). I would love to hear from you if you have better ways of doing this :eyes:</p> <hr/> <h2 id="step-by-step-logo-making-process">Step-by-step logo making process</h2> <h5 id="-tools-that-i-use"><i class="fas fa-tools"></i> Tools that I use</h5> <ul> <li><a href="https://www.adobe.com/products/illustrator.html">Adobe Illustrator (Ai)</a>: This is the tool for graphic design, which helps turn a <code class="language-plaintext highlighter-rouge">.jpg</code> version of the LTI logo into a <code class="language-plaintext highlighter-rouge">.svg</code>. One can probably use Affinity Design as well since Adobe Illustrator is kind of pricey.</li> <li><a href="https://marketplace.visualstudio.com/items?itemName=henoc.svgeditor">SVG Editor</a>: This is a VS Code extension, which allows you to perform some simple operations to your SVG in a coding level.</li> <li><a href="https://blog.hubspot.com/website/css-animation-examples">CSS Animation</a>: There exists a bunch of tools/websites that can help you create amazing CSS animations. I really like https://animate.style/, or simply searching <code class="language-plaintext highlighter-rouge">CSS animations examples</code> would yield a bunch of animations, which can serve as inspirations.</li> </ul> <h5 id="-vectorize-the-lti-logo"><i class="fas fa-vector-square"></i> Vectorize the LTI logo</h5> <p>This is the hardest part of the whole process since there is not a publicly available SVG version of the LTI logo (as far as the first page of Google search knows). Therefore, I need to make the two wifi-like waves match perfectly myself. It is a winding process of figuring out the best approach to doing this. I have tried:</p> <ul> <li>Directly vectorize the logo from the <code class="language-plaintext highlighter-rouge">.jpg</code> file with the <a href="">Ai</a>‚Äôs image trace tool. This yields small messy curves.</li> <li>Download a wifi <code class="language-plaintext highlighter-rouge">.svg</code> online, copy and assemble them to look like the logo. This gives me roughly the LTI logo. But due to the different bandwidth, curvature, the resulting image still lacks some original ‚Äúflavor‚Äù.</li> <li>It turns out that I would like to reproduce the exact LTI-logo first before doing some creative modifications. Then I turn my attention to using the <em>Curvature</em> tool in <a href="">Ai</a>, this is the point where I am on the right track.</li> </ul> <p>With the <em>Curvature</em> tool, I can draw the logo with the <code class="language-plaintext highlighter-rouge">.jpg</code> file as the template. Tips:</p> <ul> <li>use the double click to make straight lines there (Gosh, it took so loooooog to figure that out. :cry:)</li> <li>For the color, you can simply use the <em>Eyedropper tool</em> in <a href="">Ai</a>.</li> </ul> <h5 id="-find-the-css-animation-you-like"><i class="fas fa-file-code"></i> Find the CSS animation you like</h5> <p>Now it comes the fun part!! With the vectorized image in hand, you can almost do any manipulation you want. But first you need to find a suitable one. There is little technical difficulty in this process and it‚Äôs more about exploring and appreciating. Yayyyyy! :star2:</p> <h5 id="-mix-the-animation-with-your-logo"><i class="far fa-object-group"></i> Mix the animation with your logo</h5> <p>Here the <a href="">SVG Editor</a> comes in handy. With the visualizing mode of the editor, you can resize the logo or the animation to make them fit together. I also change the color of the logo to pure white to match the style of the animation. For <code class="language-plaintext highlighter-rouge">Jekyll</code> users, you can add the animation <code class="language-plaintext highlighter-rouge">css</code> file to <code class="language-plaintext highlighter-rouge">\_sass\_layout.scss</code>.</p> <hr/> <h2 id="technical-improvements">Technical improvements</h2> <h5 id="-make-the-logo-interactive"><i class="fas fa-mouse"></i> Make the logo interactive</h5> <p>I also want to let the visitors play with the logo themselves. The following code enables the visitor stop the animation by clicking it.</p> <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
    <span class="kd">var</span> <span class="nx">clickDiv</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementsByClassName</span><span class="p">(</span><span class="dl">"</span><span class="s2">box</span><span class="dl">"</span><span class="p">);</span>
    <span class="kd">var</span> <span class="nx">svgLogo</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementsByClassName</span><span class="p">(</span><span class="dl">"</span><span class="s2">svg_logo</span><span class="dl">"</span><span class="p">)</span>
<span class="nx">svgLogo</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nf">addEventListener</span><span class="p">(</span><span class="dl">"</span><span class="s2">click</span><span class="dl">"</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
    <span class="k">for </span><span class="p">(</span><span class="nx">click</span> <span class="k">of</span> <span class="nx">clickDiv</span><span class="p">){</span>
    <span class="k">if </span><span class="p">(</span><span class="nx">click</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">animationPlayState</span> <span class="o">==</span> <span class="dl">""</span> <span class="o">||</span>
        <span class="nx">click</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">animationPlayState</span> <span class="o">==</span> <span class="dl">"</span><span class="s2">running</span><span class="dl">"</span>
    <span class="p">)</span> <span class="p">{</span>
<span class="nx">click</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">animationPlayState</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">paused</span><span class="dl">"</span><span class="p">;</span>
    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
<span class="nx">click</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">animationPlayState</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">running</span><span class="dl">"</span><span class="p">;</span> <span class="c1">// assuming you want to toggle</span>
    <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">})</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span></code></pre></div></div> <p>For <code class="language-plaintext highlighter-rouge">Jekyll</code> users, you can add this script to <code class="language-plaintext highlighter-rouge">\_includes\scripts\custom.html</code>.</p> <h5 id="-make-the-logo-disappear-if-the-screen-is-not-wide-enough"><i class="fas fa-arrows-alt-h"></i> Make the logo disappear if the screen is not wide enough</h5> <p>The logo could look bad if the screen is not wide enough. Here I am being lazy choosing to let it disapear with the following code added to <code class="language-plaintext highlighter-rouge">_sass/_layouts.scss</code>:</p> <div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">@media</span> <span class="n">screen</span> <span class="n">and</span> <span class="p">(</span><span class="n">max-width</span><span class="p">:</span> <span class="m">1200px</span><span class="p">)</span> <span class="p">{</span>
  <span class="nc">.svg_logo</span> <span class="p">{</span><span class="nl">display</span><span class="p">:</span><span class="nb">none</span><span class="p">;}</span>
<span class="p">}</span>
</code></pre></div></div> <hr/> <h2 id="conclusion">Conclusion</h2> <p>Now it looks like it is not so difficult to do that haha! I encourage you to get your hands dirty and looking forward to seeing your :art: soon :blush:</p>]]></content><author><name></name></author><category term="design-posts"/><category term="lti"/><category term="logo"/><summary type="html"><![CDATA[april, looking forward to summer]]></summary></entry><entry><title type="html">a post with redirect</title><link href="https://xuhuizhou.github.io/blog/2022/redirect/" rel="alternate" type="text/html" title="a post with redirect"/><published>2022-02-01T12:39:00-05:00</published><updated>2022-02-01T12:39:00-05:00</updated><id>https://xuhuizhou.github.io/blog/2022/redirect</id><content type="html" xml:base="https://xuhuizhou.github.io/blog/2022/redirect/"><![CDATA[<p>Redirecting to another page.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[you can also redirect to assets like pdf]]></summary></entry><entry><title type="html">a post with diagrams</title><link href="https://xuhuizhou.github.io/blog/2021/diagrams/" rel="alternate" type="text/html" title="a post with diagrams"/><published>2021-07-04T13:39:00-04:00</published><updated>2021-07-04T13:39:00-04:00</updated><id>https://xuhuizhou.github.io/blog/2021/diagrams</id><content type="html" xml:base="https://xuhuizhou.github.io/blog/2021/diagrams/"><![CDATA[<p>This theme supports generating various diagrams from a text description using <a href="https://github.com/zhustec/jekyll-diagrams" target="\_blank">jekyll-diagrams</a> plugin. Below, we generate a few examples of such diagrams using languages such as <a href="https://mermaid-js.github.io/mermaid/" target="\_blank">mermaid</a>, <a href="https://plantuml.com/" target="\_blank">plantuml</a>, <a href="https://vega.github.io/vega-lite/" target="\_blank">vega-lite</a>, etc.</p> <p><strong>Note:</strong> different diagram-generation packages require external dependencies to be installed on your machine. Also, be mindful of that because of diagram generation the fist time you build your Jekyll website after adding new diagrams will be SLOW. For any other details, please refer to <a href="https://github.com/zhustec/jekyll-diagrams" target="\_blank">jekyll-diagrams</a> README.</p> <h2 id="mermaid">Mermaid</h2> <p>Install mermaid using <code class="language-plaintext highlighter-rouge">node.js</code> package manager <code class="language-plaintext highlighter-rouge">npm</code> by running the following command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">-g</span> mermaid.cli
</code></pre></div></div> <p>The diagram below was generated by the following code:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% mermaid %}
sequenceDiagram
    participant John
    participant Alice
    Alice-&gt;&gt;John: Hello John, how are you?
    John--&gt;&gt;Alice: Great!
{% endmermaid %}
</code></pre></div></div> <div class="jekyll-diagrams diagrams mermaid"> Command Not Found: mmdc </div>]]></content><author><name></name></author><summary type="html"><![CDATA[an example of a blog post with diagrams]]></summary></entry><entry><title type="html">a distill-style blog post</title><link href="https://xuhuizhou.github.io/blog/2021/distill/" rel="alternate" type="text/html" title="a distill-style blog post"/><published>2021-05-22T00:00:00-04:00</published><updated>2021-05-22T00:00:00-04:00</updated><id>https://xuhuizhou.github.io/blog/2021/distill</id><content type="html" xml:base="https://xuhuizhou.github.io/blog/2021/distill/"><![CDATA[<h2 id="equations">Equations</h2> <p>This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine. You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>. If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p> <p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph. Here is an example:</p> \[\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)\] <p>Note that MathJax 3 is <a href="https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html">a major re-write of MathJax</a> that brought a significant improvement to the loading and rendering speed, which is now <a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php">on par with KaTeX</a>.</p> <hr/> <h2 id="citations">Citations</h2> <p>Citations are then used in the article body with the <code class="language-plaintext highlighter-rouge">&lt;d-cite&gt;</code> tag. The key attribute is a reference to the id provided in the bibliography. The key attribute can take multiple ids, separated by commas.</p> <p>The citation is presented inline like this: <d-cite key="gregor2015draw"></d-cite> (a number that displays more information on hover). If you have an appendix, a bibliography is automatically created and populated in it.</p> <p>Distill chose a numerical inline citation style to improve readability of citation dense articles and because many of the benefits of longer citations are obviated by displaying more information on hover. However, we consider it good style to mention author last names if you discuss something at length and it fits into the flow well‚Äâ‚Äî‚Äâthe authors are human and it‚Äôs nice for them to have the community associate them with their work.</p> <hr/> <h2 id="footnotes">Footnotes</h2> <p>Just wrap the text you would like to show up in a footnote in a <code class="language-plaintext highlighter-rouge">&lt;d-footnote&gt;</code> tag. The number of the footnote will be automatically generated.<d-footnote>This will become a hoverable footnote.</d-footnote></p> <hr/> <h2 id="code-blocks">Code Blocks</h2> <p>Syntax highlighting is provided within <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> tags. An example of inline code snippets: <code class="language-plaintext highlighter-rouge">&lt;d-code language="html"&gt;let x = 10;&lt;/d-code&gt;</code>. For larger blocks of code, add a <code class="language-plaintext highlighter-rouge">block</code> attribute:</p> <d-code block="" language="javascript"> var x = 25; function(x) { return x * x; } </d-code> <p><strong>Note:</strong> <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> blocks do not look good in the dark mode. You can always use the default code-highlight using the <code class="language-plaintext highlighter-rouge">highlight</code> liquid tag:</p> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
<span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">x</span> <span class="o">*</span> <span class="nx">x</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure> <hr/> <h2 id="interactive-plots">Interactive Plots</h2> <p>You can add interative plots using plotly + iframes :framed_picture:</p> <div class="l-page"> <iframe src="/assets/plotly/demo.html" frameborder="0" scrolling="no" height="500px" width="100%" style="border: 1px dashed grey;"></iframe> </div> <p>The plot must be generated separately and saved into an HTML file. To generate the plot that you see above, you can use the following code snippet:</p> <figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="n">plotly.express</span> <span class="k">as</span> <span class="n">px</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span>
  <span class="sh">'</span><span class="s">https://raw.githubusercontent.com/plotly/datasets/master/earthquakes-23k.csv</span><span class="sh">'</span>
<span class="p">)</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="nf">density_mapbox</span><span class="p">(</span>
  <span class="n">df</span><span class="p">,</span>
  <span class="n">lat</span><span class="o">=</span><span class="sh">'</span><span class="s">Latitude</span><span class="sh">'</span><span class="p">,</span>
  <span class="n">lon</span><span class="o">=</span><span class="sh">'</span><span class="s">Longitude</span><span class="sh">'</span><span class="p">,</span>
  <span class="n">z</span><span class="o">=</span><span class="sh">'</span><span class="s">Magnitude</span><span class="sh">'</span><span class="p">,</span>
  <span class="n">radius</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
  <span class="n">center</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">lat</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">lon</span><span class="o">=</span><span class="mi">180</span><span class="p">),</span>
  <span class="n">zoom</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
  <span class="n">mapbox_style</span><span class="o">=</span><span class="sh">"</span><span class="s">stamen-terrain</span><span class="sh">"</span><span class="p">,</span>
<span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">write_html</span><span class="p">(</span><span class="sh">'</span><span class="s">assets/plotly/demo.html</span><span class="sh">'</span><span class="p">)</span></code></pre></figure> <hr/> <h2 id="layouts">Layouts</h2> <p>The main text column is referred to as the body. It is the assumed layout of any direct descendants of the <code class="language-plaintext highlighter-rouge">d-article</code> element.</p> <div class="fake-img l-body"> <p>.l-body</p> </div> <p>For images you want to display a little larger, try <code class="language-plaintext highlighter-rouge">.l-page</code>:</p> <div class="fake-img l-page"> <p>.l-page</p> </div> <p>All of these have an outset variant if you want to poke out from the body text a little bit. For instance:</p> <div class="fake-img l-body-outset"> <p>.l-body-outset</p> </div> <div class="fake-img l-page-outset"> <p>.l-page-outset</p> </div> <p>Occasionally you‚Äôll want to use the full browser width. For this, use <code class="language-plaintext highlighter-rouge">.l-screen</code>. You can also inset the element a little from the edge of the browser by using the inset variant.</p> <div class="fake-img l-screen"> <p>.l-screen</p> </div> <div class="fake-img l-screen-inset"> <p>.l-screen-inset</p> </div> <p>The final layout is for marginalia, asides, and footnotes. It does not interrupt the normal flow of <code class="language-plaintext highlighter-rouge">.l-body</code> sized text except on mobile screen sizes.</p> <div class="fake-img l-gutter"> <p>.l-gutter</p> </div> <hr/> <h2 id="other-typography">Other Typography?</h2> <p>Emphasis, aka italics, with <em>asterisks</em> (<code class="language-plaintext highlighter-rouge">*asterisks*</code>) or <em>underscores</em> (<code class="language-plaintext highlighter-rouge">_underscores_</code>).</p> <p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p> <p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p> <p>Strikethrough uses two tildes. <del>Scratch this.</del></p> <ol> <li>First ordered list item</li> <li>Another item ‚ãÖ‚ãÖ* Unordered sub-list.</li> <li>Actual numbers don‚Äôt matter, just that it‚Äôs a number ‚ãÖ‚ãÖ1. Ordered sub-list</li> <li>And another item.</li> </ol> <p>‚ãÖ‚ãÖ‚ãÖYou can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we‚Äôll use three here to also align the raw Markdown).</p> <p>‚ãÖ‚ãÖ‚ãÖTo have a line break without a paragraph, you will need to use two trailing spaces.‚ãÖ‚ãÖ ‚ãÖ‚ãÖ‚ãÖNote that this line is separate, but within the same paragraph.‚ãÖ‚ãÖ ‚ãÖ‚ãÖ‚ãÖ(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p> <ul> <li>Unordered list can use asterisks</li> <li>Or minuses</li> <li>Or pluses</li> </ul> <p><a href="https://www.google.com">I‚Äôm an inline-style link</a></p> <p><a href="https://www.google.com" title="Google's Homepage">I‚Äôm an inline-style link with title</a></p> <p><a href="https://www.mozilla.org">I‚Äôm a reference-style link</a></p> <p><a href="../blob/master/LICENSE">I‚Äôm a relative reference to a repository file</a></p> <p><a href="http://slashdot.org">You can use numbers for reference-style link definitions</a></p> <p>Or leave it empty and use the <a href="http://www.reddit.com">link text itself</a>.</p> <p>URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or <a href="http://www.example.com">http://www.example.com</a> and sometimes example.com (but not on Github, for example).</p> <p>Some text to show that the reference links can follow later.</p> <p>Here‚Äôs our logo (hover to see the title text):</p> <p>Inline-style: <img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 1"/></p> <p>Reference-style: <img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 2"/></p> <p>Inline <code class="language-plaintext highlighter-rouge">code</code> has <code class="language-plaintext highlighter-rouge">back-ticks around</code> it.</p> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">JavaScript syntax highlighting</span><span class="dl">"</span><span class="p">;</span>
<span class="nf">alert</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">s</span> <span class="o">=</span> <span class="sh">"</span><span class="s">Python syntax highlighting</span><span class="sh">"</span>
<span class="k">print</span> <span class="n">s</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>No language indicated, so no syntax highlighting.
But let's throw in a &lt;b&gt;tag&lt;/b&gt;.
</code></pre></div></div> <p>Colons can be used to align columns.</p> <table> <thead> <tr> <th>Tables</th> <th style="text-align: center">Are</th> <th style="text-align: right">Cool</th> </tr> </thead> <tbody> <tr> <td>col 3 is</td> <td style="text-align: center">right-aligned</td> <td style="text-align: right">$1600</td> </tr> <tr> <td>col 2 is</td> <td style="text-align: center">centered</td> <td style="text-align: right">$12</td> </tr> <tr> <td>zebra stripes</td> <td style="text-align: center">are neat</td> <td style="text-align: right">$1</td> </tr> </tbody> </table> <p>There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don‚Äôt need to make the raw Markdown line up prettily. You can also use inline Markdown.</p> <table> <thead> <tr> <th>Markdown</th> <th>Less</th> <th>Pretty</th> </tr> </thead> <tbody> <tr> <td><em>Still</em></td> <td><code class="language-plaintext highlighter-rouge">renders</code></td> <td><strong>nicely</strong></td> </tr> <tr> <td>1</td> <td>2</td> <td>3</td> </tr> </tbody> </table> <blockquote> <p>Blockquotes are very handy in email to emulate reply text. This line is part of the same quote.</p> </blockquote> <p>Quote break.</p> <blockquote> <p>This is a very long line that will still be quoted properly when it wraps. Oh boy let‚Äôs keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p> </blockquote> <p>Here‚Äôs a line for us to start with.</p> <p>This line is separated from the one above by two newlines, so it will be a <em>separate paragraph</em>.</p> <p>This line is also a separate paragraph, but‚Ä¶ This line is only separated by a single newline, so it‚Äôs a separate line in the <em>same paragraph</em>.</p>]]></content><author><name>Albert Einstein</name></author><summary type="html"><![CDATA[an example of a distill-style blog post and main elements]]></summary></entry><entry><title type="html">a post with github metadata</title><link href="https://xuhuizhou.github.io/blog/2020/github-metadata/" rel="alternate" type="text/html" title="a post with github metadata"/><published>2020-09-28T17:01:00-04:00</published><updated>2020-09-28T17:01:00-04:00</updated><id>https://xuhuizhou.github.io/blog/2020/github-metadata</id><content type="html" xml:base="https://xuhuizhou.github.io/blog/2020/github-metadata/"><![CDATA[<p>A sample blog page that demonstrates the accessing of github meta data.</p> <h2 id="what-does-github-metadata-do">What does Github-MetaData do?</h2> <ul> <li>Propagates the site.github namespace with repository metadata</li> <li>Setting site variables : <ul> <li>site.title</li> <li>site.description</li> <li>site.url</li> <li>site.baseurl</li> </ul> </li> <li>Accessing the metadata - duh.</li> <li>Generating edittable links.</li> </ul> <h2 id="additional-reading">Additional Reading</h2> <ul> <li>If you‚Äôre recieving incorrect/missing data, you may need to perform a Github API<a href="https://github.com/jekyll/github-metadata/blob/master/docs/authentication.md"> authentication</a>.</li> <li>Go through this <a href="https://jekyll.github.io/github-metadata/">README</a> for more details on the topic.</li> <li><a href="https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md">This page</a> highlights all the feilds you can access with github-metadata. <br/></li> </ul> <h2 id="example-metadata">Example MetaData</h2> <ul> <li>Host Name :</li> <li>URL :</li> <li>BaseURL :</li> <li>Archived :</li> <li>Contributors :</li> </ul>]]></content><author><name></name></author><category term="sample-posts"/><category term="external-services"/><summary type="html"><![CDATA[a quick run down on accessing github metadata.]]></summary></entry><entry><title type="html">a post with twitter</title><link href="https://xuhuizhou.github.io/blog/2020/twitter/" rel="alternate" type="text/html" title="a post with twitter"/><published>2020-09-28T11:12:00-04:00</published><updated>2020-09-28T11:12:00-04:00</updated><id>https://xuhuizhou.github.io/blog/2020/twitter</id><content type="html" xml:base="https://xuhuizhou.github.io/blog/2020/twitter/"><![CDATA[<p>A sample blog page that demonstrates the inclusion of Tweets/Timelines/etc.</p> <h1 id="tweet">Tweet</h1> <p>An example of displaying a tweet:</p> <div class="jekyll-twitter-plugin"><blockquote class="twitter-tweet"><p lang="sv" dir="ltr">jekyll-twitter-plugin (1.0.0): A Liquid tag plugin for Jekyll that renders Tweets from Twitter API <a href="http://t.co/m4EIQPM9h4">http://t.co/m4EIQPM9h4</a></p>&mdash; RubyGems (@rubygems) <a href="https://twitter.com/rubygems/status/518821243320287232?ref_src=twsrc%5Etfw">October 5, 2014</a></blockquote> <script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> </div> <h1 id="timeline">Timeline</h1> <p>An example of pulling from a timeline:</p> <div class="jekyll-twitter-plugin"><a class="twitter-timeline" data-width="500" data-tweet-limit="3" href="https://twitter.com/jekyllrb?ref_src=twsrc%5Etfw">Tweets by jekyllrb</a> <script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> </div> <h1 id="additional-details">Additional Details</h1> <p>For more details on using the plugin visit: <a href="https://github.com/rob-murray/jekyll-twitter-plugin">jekyll-twitter-plugin</a></p>]]></content><author><name></name></author><category term="sample-posts"/><category term="external-services"/><category term="formatting"/><summary type="html"><![CDATA[an example of a blog post with twitter]]></summary></entry><entry><title type="html">a post with disqus comments</title><link href="https://xuhuizhou.github.io/blog/2015/disqus-comments/" rel="alternate" type="text/html" title="a post with disqus comments"/><published>2015-10-20T11:59:00-04:00</published><updated>2015-10-20T11:59:00-04:00</updated><id>https://xuhuizhou.github.io/blog/2015/disqus-comments</id><content type="html" xml:base="https://xuhuizhou.github.io/blog/2015/disqus-comments/"><![CDATA[<p>This post shows how to add DISQUS comments.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="external-services"/><summary type="html"><![CDATA[an example of a blog post with disqus comments]]></summary></entry></feed>